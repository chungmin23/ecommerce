buildscript {

    ext {

        queryDslVersion = "5.0.0"

    }

}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.shop'
version = '0.0.1-SNAPSHOT'
description = 'apiserver'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // JUnit 5 Platform & Engine
    testImplementation 'org.junit.platform:junit-platform-suite'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    // EmbeddedKafka & test utilities
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testAnnotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    implementation 'org.modelmapper:modelmapper:3.1.1'

    implementation 'net.coobird:thumbnailator:0.4.19'

    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"

    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation group: 'com.google.code.gson', name: 'gson', version: '2.12.1'

    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.6'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.6'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.6'

    implementation 'me.paulschwarz:spring-dotenv:4.0.0'

    // Spring AI 의존성
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter:1.0.0-M4'

    //Redis & Redisson 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.redisson:redisson-spring-boot-starter:3.24.3'

    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'

    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    )
}

tasks.named('test') {
    useJUnitPlatform()
    
    // classpath 길이 문제 해결
    jvmArgs = [
        '-Didea.junit.sm_runner.base_dir=' + project.buildDir,
        '-Didea.junit.sm_runner.exclude.specs=true'
    ]
    
    // classpath jar 방식으로 변경
    classpath = files(project.sourceSets.test.compileClasspath) + files(project.sourceSets.test.output)
    
    // 추가 설정
    systemProperties = [
        'idea.junit.sm_runner.base_dir': project.buildDir,
        'idea.junit.sm_runner.exclude.specs': 'true'
    ]
}


compileJava.dependsOn('clean')
